services:
  users_ms:
    build: ./QSUsers
    ports:
      - "8000:8000"
    environment:
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      JWT_ACCESS_SECRET_KEY: ${JWT_ACCESS_SECRET_KEY}
      JWT_REFRESH_SECRET_KEY: ${JWT_REFRESH_SECRET_KEY}
      REFRESH_TOKEN_EXPIRE_DAYS: ${REFRESH_TOKEN_EXPIRE_DAYS}
      JWT_ALGORITHM: ${JWT_ALGORITHM}
      DATABASE_URL: "asyncpg://${DB_USER}:${DB_PASSWORD}@qs_db:5432/${DB_NAME}"
      IS_PRODUCTION: ${IS_PRODUCTION}
    networks:
      - backend
    depends_on:
      - qs_db

  inventory_ms:
    build: ./QSInventory
    ports:
      - "8001:8000"
    environment:
      USERSMS_URL: "users_ms"
      DB_URL: "asyncpg://${DB_USER}:${DB_PASSWORD}@qs_db:5432/${DB_NAME}"
    networks:
      - backend
    depends_on:
      - users_ms
      - qs_db

  requests_ms:
    build: ./QSRequests
    ports:
      - "8002:8000"
    environment:
      USERSMS_URL: "users_ms"
      DB_URL: "asyncpg://${DB_USER}:${DB_PASSWORD}@qs_db:5432/${DB_NAME}"
    networks:
      - backend
    depends_on:
      - users_ms
      - qs_db

  qs_db:
    image: postgres:14-alpine
    ports:
      - "54320:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_LOGIN}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - backend

volumes:
  pgdata:
  pgadmin-data:

networks:
  backend:
